var getClient = function() {

  var commands = [
    "append",
    "auth",
    "bgrewriteaof",
    "bgsave",
    "bitcount",
    "bitop",
    "bitpos",
    "blpop",
    "brpop",
    "brpoplpush",
    "client kill",
    "client list",
    "client getname",
    "client pause",
    "client setname",
    "cluster addslots",
    "cluster count-failure-reports",
    "cluster countkeysinslot",
    "cluster delslots",
    "cluster failover",
    "cluster forget",
    "cluster getkeysinslot",
    "cluster info",
    "cluster keyslot",
    "cluster meet",
    "cluster nodes",
    "cluster replicate",
    "cluster reset",
    "cluster saveconfig",
    "cluster set-config-epoch",
    "cluster setslot",
    "cluster slaves",
    "cluster slots",
    "command",
    "command count",
    "command getkeys",
    "command info",
    "config get",
    "config rewrite",
    "config set",
    "config resetstat",
    "dbsize",
    "debug object",
    "debug segfault",
    "decr",
    "decrby",
    "del",
    "discard",
    "dump",
    "echo",
    "eval",
    "evalsha",
    "exec",
    "exists",
    "expire",
    "expireat",
    "flushall",
    "flushdb",
    "geoadd",
    "geohash",
    "geopos",
    "geodist",
    "georadius",
    "georadiusbymember",
    "get",
    "getbit",
    "getrange",
    "getset",
    "hdel",
    "hexists",
    "hget",
    "hgetall",
    "hincrby",
    "hincrbyfloat",
    "hkeys",
    "hlen",
    "hmget",
    "hmset",
    "hset",
    "hsetnx",
    "hstrlen",
    "hvals",
    "incr",
    "incrby",
    "incrbyfloat",
    "info",
    "keys",
    "lastsave",
    "lindex",
    "linsert",
    "llen",
    "lpop",
    "lpush",
    "lpushx",
    "lrange",
    "lrem",
    "lset",
    "ltrim",
    "mget",
    "migrate",
    "monitor",
    "move",
    "mset",
    "msetnx",
    "multi",
    "object",
    "persist",
    "pexpire",
    "pexpireat",
    "pfadd",
    "pfcount",
    "pfmerge",
    "ping",
    "psetex",
    "psubscribe",
    "pubsub",
    "pttl",
    "publish",
    "punsubscribe",
    "quit",
    "randomkey",
    "rename",
    "renamenx",
    "restore",
    "role",
    "rpop",
    "rpoplpush",
    "rpush",
    "rpushx",
    "sadd",
    "save",
    "scard",
    "script exists",
    "script flush",
    "script kill",
    "script load",
    "sdiff",
    "sdiffstore",
    "select",
    "set",
    "setbit",
    "setex",
    "setnx",
    "setrange",
    "shutdown",
    "sinter",
    "sinterstore",
    "sismember",
    "slaveof",
    "slowlog",
    "smembers",
    "smove",
    "sort",
    "spop",
    "srandmember",
    "srem",
    "strlen",
    "subscribe",
    "sunion",
    "sunionstore",
    "sync",
    "time",
    "ttl",
    "type",
    "unsubscribe",
    "unwatch",
    "wait",
    "watch",
    "zadd",
    "zcard",
    "zcount",
    "zincrby",
    "zinterstore",
    "zlexcount",
    "zrange",
    "zrangebylex",
    "zrevrangebylex",
    "zrangebyscore",
    "zrank",
    "zrem",
    "zremrangebylex",
    "zremrangebyrank",
    "zremrangebyscore",
    "zrevrange",
    "zrevrangebyscore",
    "zrevrank",
    "zscore",
    "zunionstore",
    "scan",
    "sscan",
    "hscan",
    "zscan"
  ];

  /*
  做一个假的redis client将所有命令输出到console.log
  */
  var client   = {}
  commands.forEach(function(command) {
    client[command] = function() {
      var params = Array.prototype.slice.call(arguments)

      var newParams = params.map(function(param) {
        if ((param || '').toString().indexOf('function') > -1) {
          return 'Function() {}'
        }

        return (param || '').toString().replace(/[\r\n]+/g, ' ')
      })

      console.log('client.' + command + '("' + newParams.join('","') + '")')

      //复写smembers因为这个回调必须要执行
      if (command == 'smembers') {
        params[1](null, ['PHP', 'JAVA'])
      }

      if (command == 'multi') {
        return client
      }
    }
  })


  return client
}


module.exports = getClient
